LOGFILE=~/bash_boost.log

cat >  $LOGFILE <<< "bash_profile...\c"

cat >>  $LOGFILE <<< "bashrc...\c"

. ~/.nvm/nvm.sh

enter_directory(){
        echo 'doing stuff for enter directory';
        if [ "$PWD" != "$PREV_PWD" ]; then
                PREV_PWD="$PWD";
                if [ -e ".nvmrc" ]; then
                        nvm use;
                fi
        fi
}
export PROMPT_COMMAND="$PROMPT_COMMAND enter_directory;"

source ~/.bashrc

cat >> $LOGFILE <<< "cd command boost..."
source ~/.bash_boost/cdargs-bash.sh
source ~/.bash_boost/cdargs.sh

cat >> $LOGFILE <<< "version control boost..."
source ~/.bash_boost/bash_vcs.sh

cat >> $LOGFILE <<< "rvm boost..."
source ~/.bash_boost/bash_rvm.sh

cat >> $LOGFILE <<< "rbenv boost..."
source ~/.bash_boost/bash_rbenv.sh

cat >> $LOGFILE <<< "custom prompt..."
source ~/.bash_boost/profile_prompt.sh

cat >> $LOGFILE <<< "building cool prompt..."
source ~/.bash_boost/build_prompt.sh

cat >> $LOGFILE <<< "terminal_colors..."
source ~/.bash_boost/terminal_colors

cat >> $LOGFILE <<< "--- Boost process Successful and Complete!"

export PATH="/opt/local/bin:/opt/local/sbin:$PATH"

alias morning="bosco morning"
alias cdn="bosco cdn"
alias bb="bosco branches"

docker_login() {
  prefix=$1
  docker exec -t -i `docker ps | grep $prefix | awk '{print $1}'` bash
}
alias dl=docker_login

alias dps="docker ps --format \"table {{.Image}}\t{{.Names}}\t{{.RunningFor}}\""

prune_dangling_images() {
 docker rmi $(docker images -f "dangling=true" -q)
}
alias docker_prune=prune_dangling_images

watch() {
  while :; do
    clear
    date
    $1
    sleep $2
  done
}

alias watch=watch

npm_what() {
  npm show $1 versions
  npm ls $1
}

alias npm_what=npm_what

export PATH="/Users/andy/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

source ~/.bash_boost/docker_run.sh
